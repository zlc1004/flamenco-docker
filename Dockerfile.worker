FROM debian:12.8-slim AS package-retrieval

RUN apt update && apt install curl -y
RUN curl https://flamenco.blender.org/downloads/flamenco-3.5-linux-amd64.tar.gz > /tmp/flamenco.tar.gz
RUN mkdir -p /flamenco && tar -zxvf /tmp/flamenco.tar.gz -C /flamenco

FROM linuxserver/blender:latest

COPY --from=package-retrieval /flamenco/flamenco-3.5-linux-amd64 /flamenco
COPY ./gpu_only_config.py /flamenco/gpu_only_config.py

WORKDIR /flamenco

# Create necessary directories with proper permissions (switch to root temporarily)
USER root
RUN mkdir -p /mnt/shared/flamenco /tmp/flamenco-worker-cache /data \
    && chmod 777 /mnt/shared/flamenco /tmp/flamenco-worker-cache /data

# Install additional dependencies for GPU support
# Install additional dependencies for GPU support
RUN apt-get update && apt-get install -y \
    xvfb \
    nvidia-cuda-toolkit \
    && rm -rf /var/lib/apt/lists/*

# Create a blender wrapper script for Flamenco compatibility with headless support
# LinuxServer image puts Blender in /usr/bin/blender
RUN echo '#!/bin/bash' > /usr/local/bin/blender && \
    echo '# LinuxServer Blender wrapper for Flamenco with headless support' >> /usr/local/bin/blender && \
    echo 'BLENDER_EXECUTABLE="/usr/bin/blender"' >> /usr/local/bin/blender && \
    echo 'if [ -f "$BLENDER_EXECUTABLE" ]; then' >> /usr/local/bin/blender && \
    echo '    echo "Using Blender: $BLENDER_EXECUTABLE" >&2' >> /usr/local/bin/blender && \
    echo '    # Start Xvfb if not already running and no DISPLAY set' >> /usr/local/bin/blender && \
    echo '    if [ -z "$DISPLAY" ] || ! xset q >/dev/null 2>&1; then' >> /usr/local/bin/blender && \
    echo '        echo "Starting virtual display for headless rendering..." >&2' >> /usr/local/bin/blender && \
    echo '        Xvfb :99 -screen 0 1920x1080x24 >/dev/null 2>&1 &' >> /usr/local/bin/blender && \
    echo '        XVFB_PID=$!' >> /usr/local/bin/blender && \
    echo '        export DISPLAY=:99' >> /usr/local/bin/blender && \
    echo '        sleep 2  # Give Xvfb time to start' >> /usr/local/bin/blender && \
    echo '        trap "kill $XVFB_PID 2>/dev/null" EXIT' >> /usr/local/bin/blender && \
    echo '    fi' >> /usr/local/bin/blender && \
    echo '    exec "$BLENDER_EXECUTABLE" "$@"' >> /usr/local/bin/blender && \
    echo 'else' >> /usr/local/bin/blender && \
    echo '    echo "Blender not found at $BLENDER_EXECUTABLE" >&2' >> /usr/local/bin/blender && \
    echo '    exit 1' >> /usr/local/bin/blender && \
    echo 'fi' >> /usr/local/bin/blender && \
    chmod +x /usr/local/bin/blender

# Set default environment variables (can be overridden by docker-compose)
ENV MANAGER_URL=http://localhost:8080
ENV FLAMENCO_WORKER_NAME="LinuxServer Blender Worker"

# Configure for headless operation with GPU
ENV DISPLAY=:99
ENV XDG_RUNTIME_DIR=/tmp
ENV CYCLES_DEVICE=CUDA
ENV CUDA_VISIBLE_DEVICES=0

# Test GPU access on startup and then run Flamenco worker
CMD ["sh", "-c", "echo '=== GPU Check ===' && nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null || echo 'nvidia-smi not available' && echo '=== Starting Flamenco Worker ===' && /flamenco/flamenco-worker -manager ${MANAGER_URL} -restart-exit-code 47"]
