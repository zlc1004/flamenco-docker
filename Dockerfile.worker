FROM debian:12.8-slim AS package-retrieval

RUN apt update && apt install curl -y
RUN curl https://flamenco.blender.org/downloads/flamenco-3.5-linux-amd64.tar.gz > /tmp/flamenco.tar.gz
RUN mkdir -p /flamenco && tar -zxvf /tmp/flamenco.tar.gz -C /flamenco

FROM docker.io/linuxserver/blender:4.2.3

COPY --from=package-retrieval /flamenco/flamenco-3.5-linux-amd64 /flamenco
COPY ./gpu_only_config.py /flamenco/gpu_only_config.py

WORKDIR /flamenco

# Create necessary directories
RUN mkdir -p /mnt/shared/flamenco /tmp/flamenco-worker-cache

# Install dependencies for headless operation
RUN apt-get update && apt-get install -y \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# Set default environment variables (can be overridden by docker-compose)
ENV MANAGER_URL=http://localhost:8080
ENV FLAMENCO_WORKER_NAME="Flamenco Worker"

# Configure for headless operation
ENV DISPLAY=:99
ENV XDG_RUNTIME_DIR=/tmp
ENV LIBGL_ALWAYS_SOFTWARE=1

# Copy the OptiX fix script as a custom init script
COPY ./entrypoint-worker.sh /etc/cont-init.d/99-optix-fix
RUN chmod +x /etc/cont-init.d/99-optix-fix

# Create the actual worker startup script
RUN echo '#!/bin/bash\n# Debug GPU and Cycles devices\necho "=== GPU Debug Info ==="\nnvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null || echo "nvidia-smi not available"\necho "OptiX libraries:"\nls -la /usr/lib/x86_64-linux-gnu/libnvoptix* 2>/dev/null || echo "No OptiX libraries found"\necho "RTCORE libraries:"\nls -la /usr/lib/x86_64-linux-gnu/libnvidia-rtcore* 2>/dev/null || echo "No RTCORE libraries found"\necho "Available Cycles devices:"\nblender -b --python-expr "import bpy; bpy.context.scene.render.engine='"'"'CYCLES'"'"'; prefs=bpy.context.preferences.addons['"'"'cycles'"'"'].preferences; [print(f'"'"'{dt}: {len(prefs.get_devices_for_type(dt))} devices'"'"') for dt in ['"'"'CUDA'"'"','"'"'OPTIX'"'"','"'"'OPENCL'"'"']]" 2>/dev/null || echo "Blender cycles check failed"\necho "=== Starting Worker ==="\n# Set Blender to use GPU by default\nexport CYCLES_DEVICE=CUDA\n# Start flamenco worker\nexec /flamenco/flamenco-worker -manager "$MANAGER_URL" -restart-exit-code 47' > /usr/local/bin/start-worker.sh && \
    chmod +x /usr/local/bin/start-worker.sh

# Override the default CMD to run our worker
CMD ["/usr/local/bin/start-worker.sh"]
